// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskApi.Data;

#nullable disable

namespace TaskApi.Migrations
{
    [DbContext(typeof(WorkTaskContext))]
    [Migration("20230620214430_RelateTaskToActivities2")]
    partial class RelateTaskToActivities2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TaskApi.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<Guid?>("WorkTaskId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("WorkTaskId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("TaskApi.Models.TaskCategory", b =>
                {
                    b.Property<Guid>("WorkTaskId")
                        .HasColumnType("char(36)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("WorkTaskId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("TasksCategories");
                });

            modelBuilder.Entity("TaskApi.Models.WorkActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("ConclusionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(600)
                        .HasColumnType("varchar(600)");

                    b.Property<DateTime>("InitDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<double>("TotalTime")
                        .HasColumnType("double");

                    b.Property<Guid?>("WorkTaskId")
                        .IsRequired()
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("WorkTaskId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("TaskApi.Models.WorkTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(600)
                        .HasColumnType("varchar(600)");

                    b.Property<DateTime>("InitDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("TaskApi.Models.Category", b =>
                {
                    b.HasOne("TaskApi.Models.WorkTask", null)
                        .WithMany("Categories")
                        .HasForeignKey("WorkTaskId");
                });

            modelBuilder.Entity("TaskApi.Models.TaskCategory", b =>
                {
                    b.HasOne("TaskApi.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaskApi.Models.WorkTask", "WorkTask")
                        .WithMany()
                        .HasForeignKey("WorkTaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("WorkTask");
                });

            modelBuilder.Entity("TaskApi.Models.WorkActivity", b =>
                {
                    b.HasOne("TaskApi.Models.WorkTask", "WorkTask")
                        .WithMany("Activities")
                        .HasForeignKey("WorkTaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkTask");
                });

            modelBuilder.Entity("TaskApi.Models.WorkTask", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("Categories");
                });
#pragma warning restore 612, 618
        }
    }
}
